# Madthreading Travis CI file

language: python

python:
  - "3.5"

# The apt packages here install our compiled code dependencies.
matrix:
  include:
    # macOS
    - os: osx
      language: cpp
      osx_image: xcode9.1
      env:
        - MATRIX_EVAL="CC=$(which clang) && CXX=$(which clang++) && CXXSTD=11 && ENABLE_SSE=OFF && ENABLE_TBB=OFF && ENABLE_OMP=OFF"
    # GCC 4.9
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - g++-4.9
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libgomp1
      env:
        - MATRIX_EVAL="CC=$(which gcc-4.9) && CXX=$(which g++-4.9) && CXXSTD=14 && ENABLE_SSE=ON && ENABLE_TBB=ON && ENABLE_OMP=ON"
    # GCC 5
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libgomp1
      env:
        - MATRIX_EVAL="CC=$(which gcc-5) && CXX=$(which g++-5) && CXXSTD=14 && ENABLE_SSE=ON && ENABLE_TBB=ON && ENABLE_OMP=ON"
    # GCC 6
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libgomp1
      env:
        - MATRIX_EVAL="CC=$(which gcc-6) && CXX=$(which g++-6) && CXXSTD=14 && ENABLE_SSE=OFF && ENABLE_TBB=ON && ENABLE_OMP=ON"
    # GCC 7
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libgomp1
      env:
        - MATRIX_EVAL="CC=$(which gcc-7) && CXX=$(which g++-7) && CXXSTD=14 && ENABLE_SSE=OFF && ENABLE_TBB=ON && ENABLE_OMP=ON"
    # Clang 4.0
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-4.0
            - clang++-4.0
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libiomp-dev
      env:
        - MATRIX_EVAL="CC=$(which clang-4.0) && CXX=$(which clang++-4.0) && CXXSTD=14 && ENABLE_SSE=OFF && ENABLE_TBB=OFF && ENABLE_OMP=ON"
    # Clang 5.0
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - clang++-5.0
            - build-essential
            - cmake3
            - libunittest++-dev
            - libtbb-dev
            - libiomp-dev
      env:
        - MATRIX_EVAL="CC=$(which clang-5.0) && CXX=$(which clang++-5.0) && CXXSTD=14 && ENABLE_SSE=OFF && ENABLE_TBB=OFF && ENABLE_OMP=ON"
         
         
before_install:
    - eval "${MATRIX_EVAL}"
    - export CC=${CC}
    - export CXX=${CXX}
    - echo "CC = ${CC} $(${CC} -dumpversion)"
    - echo "CXX = ${CXX} $(${CXX} -dumpversion)"
    - export ENABLE_OMP=${ENABLE_OMP}
    - export ENABLE_TBB=${ENABLE_TBB}
    - export ENABLE_SSE=${ENABLE_SSE}
    - export CXXSTD=${CXXSTD}
    - DEFAULT_DIR="${PWD}"
    - echo "--> ${PWD}"
    - git clone https://github.com/unittest-cpp/unittest-cpp.git unittest-src
    - mkdir -p unittest-src/build-unittest-cpp
    - cd unittest-src/build-unittest-cpp
    - echo "--> ${PWD}"
    - cmake -DCMAKE_INSTALL_PREFIX=$HOME/unittest-cpp -DCMAKE_BUILD_TYPE=Release -DUTPP_INCLUDE_TESTS_IN_BUILD=OFF ${PWD}/..
    - make -j2 
    - make install -j2
    - cd ${DEFAULT_DIR}
    - echo "--> ${PWD}"

install:
    - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then export USE_PYBIND=ON ; else export USE_PYBIND=OFF ; fi
    - env
    - echo "--> ${PWD}"
    - mkdir -p build-madthreading
    - cd build-madthreading
    - echo "CC = ${CC} $(${CC} -dumpversion)"
    - echo "CXX = ${CXX} $(${CXX} -dumpversion)"
    - echo "--> ${PWD}"
    - cmake -DCMAKE_INSTALL_PREFIX=${HOME}/madthreading/current
        -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON
        -DCMAKE_C_COMPILER=${CC} -DCMAKE_CXX_COMPILER=${CXX}
        -DBUILD_CXXSTD=${CXXSTD} -DENABLE_UNIT_TEST=ON
        -DUSE_TBB=${ENABLE_TBB} -DUSE_OPENMP=${ENABLE_OMP}
        -DUSE_TCMALLOC=OFF -DUSE_SSE=${ENABLE_SSE}
        -DUSE_PYBIND11=${USE_PYBIND} -DUnitTest++_ROOT=${HOME}/unittest-cpp
        -DUnitTest++_INCLUDE_DIR=${HOME}/unittest-cpp/include/UnitTest++
        ${PWD}/..
    - grep '^[A-Za-z]' CMakeCache.txt | grep -vi advanced
    - make -j2
    
    
script:
    - echo -e '#!/bin/bash\n\nset -o errexit\n' > ./run_exe.sh
    - echo -e 'RET=0\nif [ -f "./${1}" ]; then\n    ./${1}\n    RET=$?\nfi\n\nexit ${RET}\n' >> ./run_exe.sh
    - chmod +x ./run_exe.sh
    - ./run_exe.sh ex1
    - ./run_exe.sh ex2
    - ./run_exe.sh ex3a
    - ./run_exe.sh ex3b
    - ./run_exe.sh ex4
    - ./run_exe.sh ex5
    - ./run_exe.sh omp_pi_loop
    - ./run_exe.sh omp_pi_spmd_final
    - ./run_exe.sh omp_pi_spmd_simple
    - ./run_exe.sh omp_pi_task
    - ./run_exe.sh pi_serial
    - ./run_exe.sh pi_cxx11
    - ./run_exe.sh pi_lambda_serial
    - ./run_exe.sh pi_lambda_tbb
    - ./run_exe.sh pi_tbb
    - ./run_exe.sh pi_pthreads
    - ./run_exe.sh pi_thread_pool
    - ./run_exe.sh pi_thread_pool_tree_1
    - ./run_exe.sh pi_thread_pool_tree_2
